
#ifndef GLOBALDEFINE_H_
#define GLOBALDEFINE_H_

#include "ProtoCommon.h"

using namespace NProtoCommon;

#pragma once

#define LEVEL_MAX (200)

#define INVALID_POS (-1)

#define VECATTR_DEC(N)              \
    TVecFloat N;                    \
    N.resize(EFIGHTATTR_MAX, 0.f)

#define VECATTR_RESET(N)                                \
    N.resize(EFIGHTATTR_MAX, 0.f);                      \
    memset(&N[0], 0.f, sizeof(float)*EFIGHTATTR_MAX);

#define VECATTR_GET(N, I) (((I) >= N.size())?0.f:N[(I)])
#define VECATTR_SET(N, I, V) if((I) < N.size())N[(I)]=(V)
#define VECATTR_ADD(N, I, V) if((I) < N.size())N[(I)]+=(V)

#define ATTR_CHECK_OP(OP, N, I, ATTR)  do { \
    if ((EFIGHTATTR_##ATTR) >= N.size()) \
    {\
        LOG_WRN << "Attr size error(" << N.size() << ")"; \
        N.resize(EFIGHTATTR_MAX);\
        ATTR_##OP(N, I, ATTR);\
    }\
    else\
        ATTR_##OP(N, I, ATTR);\
} while(0)

#define ATTR_CHECK_OP2(OP, N, I, ATTR, COUNT)  do { \
    if ((EFIGHTATTR_##ATTR) >= N.size()) \
    {\
        LOG_WRN << "Attr size error(" << N.size() << ")"; \
        N.resize(EFIGHTATTR_MAX);\
        ATTR_##OP(N, I, ATTR, COUNT);\
    }\
    else\
        ATTR_##OP(N, I, ATTR, COUNT);\
} while(0)

#define ATTR_ADD(N, I, ATTR) N[EFIGHTATTR_##ATTR] += I->_EFIGHTATTR_##ATTR
#define ATTR_SET(N, I, ATTR) N[EFIGHTATTR_##ATTR] = I->_EFIGHTATTR_##ATTR
#define ATTR_ADDMUL(N, I, ATTR, COUNT) N[EFIGHTATTR_##ATTR] += I->_EFIGHTATTR_##ATTR * (COUNT)

#define ATTR_ADD2(N, I, ATTR) N[EFIGHTATTR_##ATTR] += static_cast<FLOAT>((I->_EFIGHTATTR_##ATTR))/10000
#define ATTR_SET2(N, I, ATTR) N[EFIGHTATTR_##ATTR] = static_cast<FLOAT>((I->_EFIGHTATTR_##ATTR))/ 10000
#define ATTR_ADDMUL2(N, I, ATTR, COUNT) N[EFIGHTATTR_##ATTR] += static_cast<FLOAT>((I->_EFIGHTATTR_##ATTR))/ 10000 * (COUNT)

const char* IndexToAttrStr(UINT8 byIndex);
const char* StrToResourceStr(string& str);
string GetAddAttrStr(const TVecFloat& rvecAttr);

#define PHYATK_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, PHYATK)
#define MGCATK_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, MGCATK)
#define PHYDEF_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, PHYDEF)
#define MGCDEF_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, MGCDEF)
#define PHYRDC_ADD(N, I)            ATTR_CHECK_OP(ADD2, N, I, PHYRDC)
#define MGCRDC_ADD(N, I)            ATTR_CHECK_OP(ADD2, N, I, MGCRDC)
#define MAXHP_ADD(N, I)             ATTR_CHECK_OP(ADD, N, I, MAXHP)
#define SPEED_ADD(N, I)             ATTR_CHECK_OP(ADD, N, I, SPEED)
#define HIT_ADD(N, I)               ATTR_CHECK_OP(ADD, N, I, HIT)
#define HITRATE_ADD(N, I)           ATTR_CHECK_OP(ADD2, N, I, HITRATE)
#define DODGE_ADD(N, I)             ATTR_CHECK_OP(ADD, N, I, DODGE)
#define DODGERATE_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, DODGERATE)
#define CRITICAL_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, CRITICAL)
#define CRTRATE_ADD(N, I)           ATTR_CHECK_OP(ADD2, N, I, CRTRATE)
#define ANTICRITCAL_ADD(N, I)       ATTR_CHECK_OP(ADD, N, I, ANTICRITCAL)
#define ANTICRTRATE_ADD(N, I)       ATTR_CHECK_OP(ADD2, N, I, ANTICRTRATE)
#define BLOCK_ADD(N, I)             ATTR_CHECK_OP(ADD, N, I, BLOCK)
#define BLOCKRATE_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, BLOCKRATE)
#define PIERCE_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, PIERCE)
#define PIERCERATE_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, PIERCERATE)
#define COUNTER_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, COUNTER)
#define COUNTERRATE_ADD(N, I)       ATTR_CHECK_OP(ADD2, N, I, COUNTERRATE)
#define RESIST_ADD(N, I)            ATTR_CHECK_OP(ADD, N, I, RESIST)
#define RESISTRATE_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, RESISTRATE)
#define INITAURA_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, INITAURA)
#define MAXAURA_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, MAXAURA)
#define CRIEXTRAADD_ADD(N, I)       ATTR_CHECK_OP(ADD2, N, I, CRIEXTRAADD)
#define CRIEXTRARDC_ADD(N, I)       ATTR_CHECK_OP(ADD2, N, I, CRIEXTRARDC)
#define METALATK_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, METALATK)
#define WOODATK_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, WOODATK)
#define WATERATK_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, WATERATK)
#define FIREATK_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, FIREATK)
#define EARTHATK_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, EARTHATK)
#define METALDEF_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, METALDEF)
#define WOODDEF_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, WOODDEF)
#define WATERDEF_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, WATERDEF)
#define FIREDEF_ADD(N, I)           ATTR_CHECK_OP(ADD, N, I, FIREDEF)
#define EARTHDEF_ADD(N, I)          ATTR_CHECK_OP(ADD, N, I, EARTHDEF)
#define PHYATK_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, PHYATK_PER)
#define MGCATK_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, MGCATK_PER)
#define PHYDEF_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, PHYDEF_PER)
#define MGCDEF_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, MGCDEF_PER)
#define MAXHP_PER_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, MAXHP_PER)
#define SPEED_PER_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, SPEED_PER)
#define HIT_PER_ADD(N, I)           ATTR_CHECK_OP(ADD2, N, I, HIT_PER)
#define DODGE_PER_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, DODGE_PER)
#define CRITICAL_PER_ADD(N, I)      ATTR_CHECK_OP(ADD2, N, I, CRITICAL_PER)
#define ANTICRITCAL_PER_ADD(N, I)   ATTR_CHECK_OP(ADD2, N, I, ANTICRITCAL_PER)
#define BLOCK_PER_ADD(N, I)         ATTR_CHECK_OP(ADD2, N, I, BLOCK_PER)
#define PIERCE_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, PIERCE_PER)
#define COUNTER_PER_ADD(N, I)       ATTR_CHECK_OP(ADD2, N, I, COUNTER_PER)
#define RESIST_PER_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, RESIST_PER)
#define ANTIEFFECT_ADD(N, I)        ATTR_CHECK_OP(ADD2, N, I, ANTIEFFECT)
#define COUTEREXTRAADD_ADD(N, I)    ATTR_CHECK_OP(ADD2, N, I, COUTEREXTRAADD)
#define COUTEREXTRARDC_ADD(N, I)    ATTR_CHECK_OP(ADD2, N, I, COUTEREXTRARDC)

#define PHYATK_SET(N, I)            ATTR_CHECK_OP(SET, N, I, PHYATK)
#define MGCATK_SET(N, I)            ATTR_CHECK_OP(SET, N, I, MGCATK)
#define PHYDEF_SET(N, I)            ATTR_CHECK_OP(SET, N, I, PHYDEF)
#define MGCDEF_SET(N, I)            ATTR_CHECK_OP(SET, N, I, MGCDEF)
#define PHYRDC_SET(N, I)            ATTR_CHECK_OP(SET2, N, I, PHYRDC)
#define MGCRDC_SET(N, I)            ATTR_CHECK_OP(SET2, N, I, MGCRDC)
#define MAXHP_SET(N, I)             ATTR_CHECK_OP(SET, N, I, MAXHP)
#define SPEED_SET(N, I)             ATTR_CHECK_OP(SET, N, I, SPEED)
#define HIT_SET(N, I)               ATTR_CHECK_OP(SET, N, I, HIT)
#define HITRATE_SET(N, I)           ATTR_CHECK_OP(SET2, N, I, HITRATE)
#define DODGE_SET(N, I)             ATTR_CHECK_OP(SET, N, I, DODGE)
#define DODGERATE_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, DODGERATE)
#define CRITICAL_SET(N, I)          ATTR_CHECK_OP(SET, N, I, CRITICAL)
#define CRTRATE_SET(N, I)           ATTR_CHECK_OP(SET2, N, I, CRTRATE)
#define ANTICRITCAL_SET(N, I)       ATTR_CHECK_OP(SET, N, I, ANTICRITCAL)
#define ANTICRTRATE_SET(N, I)       ATTR_CHECK_OP(SET2, N, I, ANTICRTRATE)
#define BLOCK_SET(N, I)             ATTR_CHECK_OP(SET, N, I, BLOCK)
#define BLOCKRATE_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, BLOCKRATE)
#define PIERCE_SET(N, I)            ATTR_CHECK_OP(SET, N, I, PIERCE)
#define PIERCERATE_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, PIERCERATE)
#define COUNTER_SET(N, I)           ATTR_CHECK_OP(SET, N, I, COUNTER)
#define COUNTERRATE_SET(N, I)       ATTR_CHECK_OP(SET2, N, I, COUNTERRATE)
#define RESIST_SET(N, I)            ATTR_CHECK_OP(SET, N, I, RESIST)
#define RESISTRATE_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, RESISTRATE)
#define INITAURA_SET(N, I)          ATTR_CHECK_OP(SET, N, I, INITAURA)
#define MAXAURA_SET(N, I)           ATTR_CHECK_OP(SET, N, I, MAXAURA)
#define CRIEXTRAADD_SET(N, I)       ATTR_CHECK_OP(SET2, N, I, CRIEXTRAADD)
#define CRIEXTRARDC_SET(N, I)       ATTR_CHECK_OP(SET2, N, I, CRIEXTRARDC)
#define METALATK_SET(N, I)          ATTR_CHECK_OP(SET, N, I, METALATK)
#define WOODATK_SET(N, I)           ATTR_CHECK_OP(SET, N, I, WOODATK)
#define WATERATK_SET(N, I)          ATTR_CHECK_OP(SET, N, I, WATERATK)
#define FIREATK_SET(N, I)           ATTR_CHECK_OP(SET, N, I, FIREATK)
#define EARTHATK_SET(N, I)          ATTR_CHECK_OP(SET, N, I, EARTHATK)
#define METALDEF_SET(N, I)          ATTR_CHECK_OP(SET, N, I, METALDEF)
#define WOODDEF_SET(N, I)           ATTR_CHECK_OP(SET, N, I, WOODDEF)
#define WATERDEF_SET(N, I)          ATTR_CHECK_OP(SET, N, I, WATERDEF)
#define FIREDEF_SET(N, I)           ATTR_CHECK_OP(SET, N, I, FIREDEF)
#define EARTHDEF_SET(N, I)          ATTR_CHECK_OP(SET, N, I, EARTHDEF)
#define PHYATK_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, PHYATK_PER)
#define MGCATK_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, MGCATK_PER)
#define PHYDEF_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, PHYDEF_PER)
#define MGCDEF_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, MGCDEF_PER)
#define MAXHP_PER_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, MAXHP_PER)
#define SPEED_PER_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, SPEED_PER)
#define HIT_PER_SET(N, I)           ATTR_CHECK_OP(SET2, N, I, HIT_PER)
#define DODGE_PER_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, DODGE_PER)
#define CRITICAL_PER_SET(N, I)      ATTR_CHECK_OP(SET2, N, I, CRITICAL_PER)
#define ANTICRITCAL_PER_SET(N, I)   ATTR_CHECK_OP(SET2, N, I, ANTICRITCAL_PER)
#define BLOCK_PER_SET(N, I)         ATTR_CHECK_OP(SET2, N, I, BLOCK_PER)
#define PIERCE_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, PIERCE_PER)
#define COUNTER_PER_SET(N, I)       ATTR_CHECK_OP(SET2, N, I, COUNTER_PER)
#define RESIST_PER_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, RESIST_PER)
#define ANTIEFFECT_SET(N, I)        ATTR_CHECK_OP(SET2, N, I, ANTIEFFECT)
#define COUTEREXTRAADD_SET(N, I)    ATTR_CHECK_OP(SET2, N, I, COUTEREXTRAADD)
#define COUTEREXTRARDC_SET(N, I)    ATTR_CHECK_OP(SET2, N, I, COUTEREXTRARDC)

#define PHYATK_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, PHYATK, COUNT)
#define MGCATK_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, MGCATK, COUNT)
#define PHYDEF_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, PHYDEF, COUNT)
#define MGCDEF_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, MGCDEF, COUNT)
#define PHYRDC_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL2, N, I, PHYRDC, COUNT)
#define MGCRDC_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL2, N, I, MGCRDC, COUNT)
#define MAXHP_ADDMUL(N, I, COUNT)             ATTR_CHECK_OP2(ADDMUL, N, I, MAXHP, COUNT)
#define SPEED_ADDMUL(N, I, COUNT)             ATTR_CHECK_OP2(ADDMUL, N, I, SPEED, COUNT)
#define HIT_ADDMUL(N, I, COUNT)               ATTR_CHECK_OP2(ADDMUL, N, I, HIT, COUNT)
#define HITRATE_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL2, N, I, HITRATE, COUNT)
#define DODGE_ADDMUL(N, I, COUNT)             ATTR_CHECK_OP2(ADDMUL, N, I, DODGE, COUNT)
#define DODGERATE_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, DODGERATE, COUNT)
#define CRITICAL_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, CRITICAL, COUNT)
#define CRTRATE_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL2, N, I, CRTRATE, COUNT)
#define ANTICRITCAL_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL, N, I, ANTICRITCAL, COUNT)
#define ANTICRTRATE_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL2, N, I, ANTICRTRATE, COUNT)
#define BLOCK_ADDMUL(N, I, COUNT)             ATTR_CHECK_OP2(ADDMUL, N, I, BLOCK, COUNT)
#define BLOCKRATE_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, BLOCKRATE, COUNT)
#define PIERCE_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, PIERCE, COUNT)
#define PIERCERATE_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, PIERCERATE, COUNT)
#define COUNTER_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, COUNTER, COUNT)
#define COUNTERRATE_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL2, N, I, COUNTERRATE, COUNT)
#define RESIST_ADDMUL(N, I, COUNT)            ATTR_CHECK_OP2(ADDMUL, N, I, RESIST, COUNT)
#define RESISTRATE_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, RESISTRATE, COUNT)
#define INITAURA_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, INITAURA, COUNT)
#define MAXAURA_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, MAXAURA, COUNT)
#define CRIEXTRAADD_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL2, N, I, CRIEXTRAADD, COUNT)
#define CRIEXTRARDC_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL2, N, I, CRIEXTRARDC, COUNT)
#define METALATK_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, METALATK, COUNT)
#define WOODATK_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, WOODATK, COUNT)
#define WATERATK_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, WATERATK, COUNT)
#define FIREATK_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, FIREATK, COUNT)
#define EARTHATK_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, EARTHATK, COUNT)
#define METALDEF_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, METALDEF, COUNT)
#define WOODDEF_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, WOODDEF, COUNT)
#define WATERDEF_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, WATERDEF, COUNT)
#define FIREDEF_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL, N, I, FIREDEF, COUNT)
#define EARTHDEF_ADDMUL(N, I, COUNT)          ATTR_CHECK_OP2(ADDMUL, N, I, EARTHDEF, COUNT)
#define PHYATK_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, PHYATK_PER, COUNT)
#define MGCATK_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, MGCATK_PER, COUNT)
#define PHYDEF_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, PHYDEF_PER, COUNT)
#define MGCDEF_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, MGCDEF_PER, COUNT)
#define MAXHP_PER_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, MAXHP_PER, COUNT)
#define SPEED_PER_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, SPEED_PER, COUNT)
#define HIT_PER_ADDMUL(N, I, COUNT)           ATTR_CHECK_OP2(ADDMUL2, N, I, HIT_PER, COUNT)
#define DODGE_PER_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, DODGE_PER, COUNT)
#define CRITICAL_PER_ADDMUL(N, I, COUNT)      ATTR_CHECK_OP2(ADDMUL2, N, I, CRITICAL_PER, COUNT)
#define ANTICRITCAL_PER_ADDMUL(N, I, COUNT)   ATTR_CHECK_OP2(ADDMUL2, N, I, ANTICRITCAL_PER, COUNT)
#define BLOCK_PER_ADDMUL(N, I, COUNT)         ATTR_CHECK_OP2(ADDMUL2, N, I, BLOCK_PER, COUNT)
#define PIERCE_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, PIERCE_PER, COUNT)
#define COUNTER_PER_ADDMUL(N, I, COUNT)       ATTR_CHECK_OP2(ADDMUL2, N, I, COUNTER_PER, COUNT)
#define RESIST_PER_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, RESIST_PER, COUNT)
#define ANTIEFFECT_ADDMUL(N, I, COUNT)        ATTR_CHECK_OP2(ADDMUL2, N, I, ANTIEFFECT, COUNT)
#define COUTEREXTRAADD_ADDMUL(N, I, COUNT)    ATTR_CHECK_OP2(ADDMUL2, N, I, COUTEREXTRAADD, COUNT)
#define COUTEREXTRARDC_ADDMUL(N, I, COUNT)    ATTR_CHECK_OP2(ADDMUL2, N, I, COUTEREXTRARDC, COUNT)

#endif // GLOBALDEFINE_H_

/* vim: set ai si nu sm smd hls is ts=4 sm=4 bs=indent,eol,start */


